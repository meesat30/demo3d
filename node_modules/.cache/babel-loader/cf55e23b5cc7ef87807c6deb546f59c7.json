{"ast":null,"code":"import { useRef, useEffect, useState } from 'react';\nvar events = ['mousedown', 'touchstart'];\n\nfunction useClickOutside(ref, handler) {\n  var savedHandler = useRef();\n  useEffect(function () {\n    savedHandler.current = handler;\n  }, [handler]);\n  useEffect(function () {\n    var listener = function listener(e) {\n      if (ref.current && !ref.current.contains(e.target)) {\n        savedHandler.current(event);\n      }\n    };\n\n    events.forEach(function (event) {\n      document.addEventListener(event, listener, {\n        passive: true\n      });\n    });\n    return function () {\n      events.forEach(function (event) {\n        document.removeEventListener(event, listener, {\n          passive: true\n        });\n      });\n    };\n  }, [ref, handler]);\n} // https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\n\nfunction useInterval(callback, delay) {\n  var savedCallback = useRef();\n  useEffect(function () {\n    savedCallback.current = callback;\n  }, [callback]);\n  useEffect(function () {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      var id = setInterval(tick, delay);\n      return function () {\n        return clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n\nfunction useWindowSize() {\n  var _useState = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  }),\n      size = _useState[0],\n      setSize = _useState[1];\n\n  function handleResize() {\n    setSize({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n  }\n\n  useEffect(function () {\n    window.addEventListener('resize', handleResize);\n    return function () {\n      return window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return size;\n}\n\nexport { useClickOutside, useInterval, useWindowSize };","map":{"version":3,"sources":["/Users/satishp/Projects/demo3d/node_modules/@swiftcarrot/react-hooks/dist/index.esm.js"],"names":["useRef","useEffect","useState","events","useClickOutside","ref","handler","savedHandler","current","listener","e","contains","target","event","forEach","document","addEventListener","passive","removeEventListener","useInterval","callback","delay","savedCallback","tick","id","setInterval","clearInterval","useWindowSize","_useState","width","window","innerWidth","height","innerHeight","size","setSize","handleResize"],"mappings":"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","sourcesContent":["import { useRef, useEffect, useState } from 'react';\n\nvar events = ['mousedown', 'touchstart'];\nfunction useClickOutside(ref, handler) {\n  var savedHandler = useRef();\n  useEffect(function () {\n    savedHandler.current = handler;\n  }, [handler]);\n  useEffect(function () {\n    var listener = function listener(e) {\n      if (ref.current && !ref.current.contains(e.target)) {\n        savedHandler.current(event);\n      }\n    };\n\n    events.forEach(function (event) {\n      document.addEventListener(event, listener, {\n        passive: true\n      });\n    });\n    return function () {\n      events.forEach(function (event) {\n        document.removeEventListener(event, listener, {\n          passive: true\n        });\n      });\n    };\n  }, [ref, handler]);\n}\n\n// https://overreacted.io/making-setinterval-declarative-with-react-hooks/\nfunction useInterval(callback, delay) {\n  var savedCallback = useRef();\n  useEffect(function () {\n    savedCallback.current = callback;\n  }, [callback]);\n  useEffect(function () {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      var id = setInterval(tick, delay);\n      return function () {\n        return clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n\nfunction useWindowSize() {\n  var _useState = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  }),\n      size = _useState[0],\n      setSize = _useState[1];\n\n  function handleResize() {\n    setSize({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n  }\n\n  useEffect(function () {\n    window.addEventListener('resize', handleResize);\n    return function () {\n      return window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return size;\n}\n\nexport { useClickOutside, useInterval, useWindowSize };\n"]},"metadata":{},"sourceType":"module"}