{"ast":null,"code":"var _jsxFileName = \"/Users/satishp/Projects/demo3d/src/App.js\";\nimport React, { useRef, useState } from \"react\"; //R3F\n\nimport { Canvas, useFrame } from \"react-three-fiber\"; // Deai - R3F\n\nimport { MeshWobbleMaterial, OrbitControls } from \"drei\"; // Styles\n\nimport \"./App.css\"; // React Spring\n\nimport { useSpring, a } from \"react-spring/three\";\n\nconst SpinningMesh = ({\n  position,\n  color,\n  speed,\n  args\n}) => {\n  //ref to target the mesh\n  const mesh = useRef(); //useFrame allows us to re-render/update rotation on each frame\n\n  useFrame(() => mesh.current.rotation.x = mesh.current.rotation.y += 0.01); //Basic expand state\n\n  const [expand, setExpand] = useState(false); // React spring expand animation\n\n  const props = useSpring({\n    scale: expand ? [1.4, 1.4, 1.4] : [1, 1, 1]\n  });\n  console.log(expand);\n  return /*#__PURE__*/React.createElement(a.mesh, {\n    position: position,\n    ref: mesh,\n    onClick: () => setExpand(!expand),\n    scale: props.scale,\n    castShadow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"boxBufferGeometry\", {\n    attach: \"geometry\",\n    args: args,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MeshWobbleMaterial, {\n    color: color,\n    speed: speed,\n    attach: \"material\",\n    factor: 0.6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst App = () => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Canvas, {\n    colorManagement: true,\n    camera: {\n      position: [-50, 2, 10],\n      fov: 60\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ambientLight\", {\n    intensity: 0.3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SpinningMesh, {\n    position: [1, 1, 1],\n    color: \"red\",\n    args: [3, 2, 1],\n    speed: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(OrbitControls, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/satishp/Projects/demo3d/src/App.js"],"names":["React","useRef","useState","Canvas","useFrame","MeshWobbleMaterial","OrbitControls","useSpring","a","SpinningMesh","position","color","speed","args","mesh","current","rotation","x","y","expand","setExpand","props","scale","console","log","App","fov"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC,C,CACA;;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,mBAAjC,C,CACA;;AACA,SAASC,kBAAT,EAA6BC,aAA7B,QAAkD,MAAlD,C,CAEA;;AACA,OAAO,WAAP,C,CACA;;AACA,SAASC,SAAT,EAAoBC,CAApB,QAA6B,oBAA7B;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA,KAAnB;AAA0BC,EAAAA;AAA1B,CAAD,KAAsC;AACzD;AACA,QAAMC,IAAI,GAAGb,MAAM,EAAnB,CAFyD,CAIzD;;AACAG,EAAAA,QAAQ,CAAC,MAAOU,IAAI,CAACC,OAAL,CAAaC,QAAb,CAAsBC,CAAtB,GAA0BH,IAAI,CAACC,OAAL,CAAaC,QAAb,CAAsBE,CAAtB,IAA2B,IAA7D,CAAR,CALyD,CAOzD;;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,KAAD,CAApC,CARyD,CASzD;;AACA,QAAMmB,KAAK,GAAGd,SAAS,CAAC;AACtBe,IAAAA,KAAK,EAAEH,MAAM,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAH,GAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AADZ,GAAD,CAAvB;AAGAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACA,sBAEE,oBAAC,CAAD,CAAG,IAAH;AACE,IAAA,QAAQ,EAAET,QADZ;AAEE,IAAA,GAAG,EAAEI,IAFP;AAGE,IAAA,OAAO,EAAE,MAAMM,SAAS,CAAC,CAACD,MAAF,CAH1B;AAIE,IAAA,KAAK,EAAEE,KAAK,CAACC,KAJf;AAKE,IAAA,UAAU,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAmB,IAAA,MAAM,EAAC,UAA1B;AAAqC,IAAA,IAAI,EAAET,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE,oBAAC,kBAAD;AACE,IAAA,KAAK,EAAEF,KADT;AAEE,IAAA,KAAK,EAAEC,KAFT;AAGE,IAAA,MAAM,EAAC,UAHT;AAIE,IAAA,MAAM,EAAE,GAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAFF;AAkBD,CAhCD;;AAkCA,MAAMa,GAAG,GAAG,MAAM;AAChB,sBACE,uDAEE,oBAAC,MAAD;AACE,IAAA,eAAe,MADjB;AAEE,IAAA,MAAM,EAAE;AAAEf,MAAAA,QAAQ,EAAE,CAAC,CAAC,EAAF,EAAM,CAAN,EAAS,EAAT,CAAZ;AAA0BgB,MAAAA,GAAG,EAAE;AAA/B,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAc,IAAA,SAAS,EAAE,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADZ;AAEE,IAAA,KAAK,EAAC,KAFR;AAGE,IAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHR;AAIE,IAAA,KAAK,EAAE,CAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,eAgBE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CAFF,CADF;AAuBD,CAxBD;;AA0BA,eAAeD,GAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\n//R3F\nimport { Canvas, useFrame } from \"react-three-fiber\";\n// Deai - R3F\nimport { MeshWobbleMaterial, OrbitControls } from \"drei\";\n\n// Styles\nimport \"./App.css\";\n// React Spring\nimport { useSpring, a } from \"react-spring/three\";\n\n\nconst SpinningMesh = ({ position, color, speed, args }) => {\n  //ref to target the mesh\n  const mesh = useRef();\n\n  //useFrame allows us to re-render/update rotation on each frame\n  useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01));\n\n  //Basic expand state\n  const [expand, setExpand] = useState(false);\n  // React spring expand animation\n  const props = useSpring({\n    scale: expand ? [1.4, 1.4, 1.4] : [1, 1, 1],\n  });\n  console.log(expand);\n  return (\n    \n    <a.mesh\n      position={position}\n      ref={mesh}\n      onClick={() => setExpand(!expand)}\n      scale={props.scale}\n      castShadow>\n      <boxBufferGeometry attach='geometry' args={args} />\n      <MeshWobbleMaterial\n        color={color}\n        speed={speed}\n        attach='material'\n        factor={0.6}\n      />\n    </a.mesh>\n\n  );\n};\n\nconst App = () => {\n  return (\n    <>\n      {/* Our Scene & Camera is already built into our canvas */}\n      <Canvas\n        colorManagement\n        camera={{ position: [-50, 2, 10], fov: 60 }}>\n        {/* This light makes things look pretty */}\n        <ambientLight intensity={0.3} />\n    \n        <group>      \n          <SpinningMesh\n            position={[1, 1, 1]}\n            color='red'\n            args={[3, 2, 1]}\n            speed={5}\n          />\n          \n        </group>\n        {/* Allows us to move the canvas around for different prespectives */}\n        <OrbitControls />\n      </Canvas>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}