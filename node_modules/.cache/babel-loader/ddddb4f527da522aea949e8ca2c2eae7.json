{"ast":null,"code":"var _jsxFileName = \"/Users/satishp/Projects/demo3d/src/App.js\";\nimport React, { useRef, useState } from \"react\";\nimport { Canvas, useFrame } from \"react-three-fiber\";\nimport { MeshWobbleMaterial } from \"drei\";\nimport \"./App.css\";\nimport { useSpring, a } from \"react-spring/three\";\nimport { ColorPicker } from \"../node_modules/react-input-color\";\n\nconst SpinningMesh = ({\n  position,\n  color,\n  speed,\n  args\n}) => {\n  const mesh = useRef();\n  useFrame(() => mesh.current.rotation.x = mesh.current.rotation.y += 0.01);\n  const [expand, setExpand] = useState(false);\n  const props = useSpring({\n    scale: expand ? [1.4, 1.4, 1.4] : [1, 1, 1]\n  });\n  console.log(expand);\n  return /*#__PURE__*/React.createElement(a.mesh, {\n    position: position,\n    ref: mesh,\n    onClick: () => setExpand(!expand),\n    scale: props.scale,\n    castShadow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"boxBufferGeometry\", {\n    attach: \"geometry\",\n    args: args,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MeshWobbleMaterial, {\n    color: color,\n    speed: speed,\n    attach: \"material\",\n    factor: 0.6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst App = () => {\n  const [usecolor, setUsecolor] = React.useState({});\n  const {\n    colorName\n  } = usecolor;\n\n  const onInputChange = e => {\n    setUsecolor({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control form-control-lg\",\n    placeholder: \"Enter New Category\",\n    name: \"colorName\",\n    value: colorName,\n    onChange: e => onInputChange(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Canvas, {\n    colorManagement: true,\n    camera: {\n      position: [-50, 2, 10],\n      fov: 60\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ambientLight\", {\n    intensity: 0.3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SpinningMesh, {\n    position: [0, 1, 0],\n    color: \"red\",\n    args: [5, 5, 5],\n    speed: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/satishp/Projects/demo3d/src/App.js"],"names":["React","useRef","useState","Canvas","useFrame","MeshWobbleMaterial","useSpring","a","ColorPicker","SpinningMesh","position","color","speed","args","mesh","current","rotation","x","y","expand","setExpand","props","scale","console","log","App","usecolor","setUsecolor","colorName","onInputChange","e","target","name","value","fov"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { Canvas, useFrame } from \"react-three-fiber\";\nimport { MeshWobbleMaterial } from \"drei\";\nimport \"./App.css\";\nimport { useSpring, a } from \"react-spring/three\";\nimport { ColorPicker } from \"../node_modules/react-input-color\";\n\n\n\n\nconst SpinningMesh = ({ position, color, speed, args }) => {\n  const mesh = useRef();\n\n  useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01));\n\n  const [expand, setExpand] = useState(false);\n  const props = useSpring({\n    scale: expand ? [1.4, 1.4, 1.4] : [1, 1, 1],\n  });\n  console.log(expand);\n  return (\n    \n    <a.mesh\n      position={position}\n      ref={mesh}\n      onClick={() => setExpand(!expand)}\n      scale={props.scale}\n      castShadow>\n      <boxBufferGeometry attach='geometry' args={args} />\n      <MeshWobbleMaterial\n        color={color}\n        speed={speed}\n        attach='material'\n        factor={0.6}\n      />\n    </a.mesh>\n\n  );\n};\n\nconst App = () => {\n  const [usecolor, setUsecolor] = React.useState({});\n  const {colorName }=usecolor;\n  const onInputChange= e =>{\n    setUsecolor({[e.target.name]:e.target.value})\n   \n};\n\n  return (\n    <>\n   \n            <input\n              type=\"text\"\n              className=\"form-control form-control-lg\"\n              placeholder=\"Enter New Category\"\n              name=\"colorName\"\n              value={colorName}\n              onChange={e => onInputChange(e)}\n              required\n            />\n          \n    \n      \n      {/* Our Scene & Camera is already built into our canvas */}\n      <Canvas\n        colorManagement\n        camera={{ position: [-50, 2, 10], fov: 60 }}>\n       \n        <ambientLight intensity={0.3} />\n    \n        <group>      \n          <SpinningMesh\n            position={[0, 1, 0]}\n            color=\"red\"\n            args={[5, 5, 5]}\n            speed={2}\n          />\n          \n        </group>\n      \n      </Canvas>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}