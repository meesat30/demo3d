{"ast":null,"code":"var _jsxFileName = \"/Users/satishp/Projects/demo3d/src/App.js\";\nimport React, { useRef, useState } from \"react\";\nimport { Canvas, useFrame } from \"react-three-fiber\";\nimport { MeshWobbleMaterial } from \"drei\";\nimport \"./App.css\";\nimport { useSpring, a } from \"react-spring/three\";\nimport { SketchPicker } from \"react-color\";\n\nconst SpinningMesh = ({\n  position,\n  color,\n  speed,\n  args\n}) => {\n  const mesh = useRef();\n  useFrame(() => mesh.current.rotation.x = mesh.current.rotation.y += 0.01);\n  const [expand, setExpand] = useState(false);\n  const props = useSpring({\n    scale: expand ? [1.4, 1.4, 1.4] : [1, 1, 1]\n  });\n  console.log(expand);\n  return /*#__PURE__*/React.createElement(a.mesh, {\n    position: position,\n    ref: mesh,\n    onClick: () => setExpand(!expand),\n    scale: props.scale,\n    castShadow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"boxBufferGeometry\", {\n    attach: \"geometry\",\n    args: args,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MeshWobbleMaterial, {\n    color: color,\n    speed: speed,\n    attach: \"material\",\n    factor: 0.6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst App = () => {\n  const [usecolor, setUsecolor] = React.useState({\n    colorName: \"\"\n  });\n  const {\n    colorName\n  } = usecolor;\n\n  const onInputChange = e => {\n    setUsecolor({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  console.log(colorName);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control form-control-lg\",\n    placeholder: \"Enter New Category\",\n    name: \"colorName\",\n    value: colorName,\n    onChange: e => onInputChange(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    name: \"colorName\",\n    onChange: e => onInputChange(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 26\n    }\n  }, \"Select Category\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 26\n    }\n  }, \"Red\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 26\n    }\n  }, \"Yellow\"), \"))}\")), /*#__PURE__*/React.createElement(Canvas, {\n    colorManagement: true,\n    camera: {\n      position: [-50, 2, 10],\n      fov: 60\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ambientLight\", {\n    intensity: 0.3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SpinningMesh, {\n    position: [0, 1, 0],\n    color: colorName,\n    args: [5, 5, 5],\n    speed: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/satishp/Projects/demo3d/src/App.js"],"names":["React","useRef","useState","Canvas","useFrame","MeshWobbleMaterial","useSpring","a","SketchPicker","SpinningMesh","position","color","speed","args","mesh","current","rotation","x","y","expand","setExpand","props","scale","console","log","App","usecolor","setUsecolor","colorName","onInputChange","e","target","name","value","fov"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { Canvas, useFrame } from \"react-three-fiber\";\nimport { MeshWobbleMaterial } from \"drei\";\nimport \"./App.css\";\nimport { useSpring, a } from \"react-spring/three\";\nimport { SketchPicker } from \"react-color\";\n\n\nconst SpinningMesh = ({ position, color, speed, args }) => {\n  const mesh = useRef();\n\n  useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01));\n\n  const [expand, setExpand] = useState(false);\n  const props = useSpring({\n    scale: expand ? [1.4, 1.4, 1.4] : [1, 1, 1],\n  });\n  console.log(expand);\n  return (\n\n    <a.mesh\n      position={position}\n      ref={mesh}\n      onClick={() => setExpand(!expand)}\n      scale={props.scale}\n      castShadow>\n      <boxBufferGeometry attach='geometry' args={args} />\n      <MeshWobbleMaterial\n        color={color}\n        speed={speed}\n        attach='material'\n        factor={0.6}\n      />\n    </a.mesh>\n\n  );\n};\n\nconst App = () => {\n  const [usecolor, setUsecolor] = React.useState({\n    colorName: \"\"\n  });\n  const { colorName } = usecolor;\n  const onInputChange = e => {\n    setUsecolor({ [e.target.name]: e.target.value })\n\n  };\n  console.log(colorName);\n\n  return (\n    <>\n      <div>\n        <input\n          type=\"text\"\n          className=\"form-control form-control-lg\"\n          placeholder=\"Enter New Category\"\n          name=\"colorName\"\n          value={colorName}\n          onChange={e => onInputChange(e)}\n          required\n        />\n      </div>\n      <div>\n                        <select name=\"colorName\" onChange={e => onInputChange(e)} required>\n                         <option  value=\"\">Select Category</option>\n                         <option  value=\"red\">Red</option>\n                         <option  value=\"yellow\">Yellow</option>\n                                \n                        ))}\n                        </select>\n\n                    </div>\n\n      <Canvas\n        colorManagement\n        camera={{ position: [-50, 2, 10], fov: 60 }}>\n\n        <ambientLight intensity={0.3} />\n\n        <group>\n          <SpinningMesh\n            position={[0, 1, 0]}\n            color={colorName}\n            args={[5, 5, 5]}\n            speed={2}\n          />\n\n        </group>\n\n      </Canvas>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}