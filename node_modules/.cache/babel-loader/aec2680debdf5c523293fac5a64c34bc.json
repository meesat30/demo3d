{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/objectWithoutPropertiesLoose';\nimport { jsx } from '@emotion/core';\nimport isNaN from 'lodash/isNaN';\nimport isNumber from 'lodash/isNumber';\nimport isString from 'lodash/isString';\nimport { useState, useEffect } from 'react';\nvar KEY_UP = 38;\nvar KEY_DOWN = 40;\nvar IS_IOS = typeof navigator !== 'undefined' ? navigator.userAgent.match(/iPhone|iPad|iPod/i) : false;\n\nvar InputNumber = function InputNumber(_ref) {\n  var step = _ref.step,\n      min = _ref.min,\n      max = _ref.max,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      onKeyDown = _ref.onKeyDown,\n      enableMobileNumericKeyboard = _ref.enableMobileNumericKeyboard,\n      component = _ref.component,\n      props = _objectWithoutPropertiesLoose(_ref, [\"step\", \"min\", \"max\", \"value\", \"onChange\", \"onKeyDown\", \"enableMobileNumericKeyboard\", \"component\"]);\n\n  var _useState = useState(value),\n      text = _useState[0],\n      setText = _useState[1];\n\n  useEffect(function () {\n    setText(value);\n  }, [value]);\n\n  function handleChange(text) {\n    var value = parseText(text);\n    setText(text);\n\n    if (onChange) {\n      onChange(value);\n    }\n  }\n\n  function handleWheel(e) {\n    e.target.blur();\n  }\n\n  function handleKeyDown(e) {\n    if (e.keyCode === KEY_UP) {\n      up();\n    } else if (e.keyCode === KEY_DOWN) {\n      down();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(e);\n    }\n  }\n\n  function up() {\n    if (onChange) {\n      onChange(changeValue('+', value, max, min, step));\n    }\n  }\n\n  function down() {\n    if (onChange) {\n      onChange(changeValue('-', value, max, min, step));\n    }\n  }\n\n  var inputProps = {\n    value: text,\n    onChange: handleChange,\n    onKeyDown: handleKeyDown,\n    onWheel: handleWheel\n  };\n\n  if (enableMobileNumericKeyboard) {\n    return jsx(component, _extends({}, props, inputProps, {\n      css: styles,\n      type: 'number',\n      inputMode: 'numeric',\n      pattern: IS_IOS ? \"[0-9]*\" : '',\n      step: step,\n      min: min,\n      max: max\n    }));\n  }\n\n  return jsx(component, _extends({}, props, inputProps, {\n    css: styles,\n    type: 'text'\n  }));\n};\n\nvar Input = function Input(_ref2) {\n  var onChange = _ref2.onChange,\n      props = _objectWithoutPropertiesLoose(_ref2, [\"onChange\"]);\n\n  function handleChange(e) {\n    if (onChange) {\n      onChange(e.target.value);\n    }\n  }\n\n  return jsx(\"input\", _extends({}, props, {\n    onChange: handleChange\n  }));\n};\n\nInputNumber.defaultProps = {\n  autoComplete: 'off',\n  enableMobileNumericKeyboard: false,\n  value: '',\n  component: Input,\n  step: 1\n};\nvar styles = {\n  MozAppearance: 'textfield',\n  '&::-webkit-inner-spin-button, &::-webkit-outer-spin-button': {\n    WebkitAppearance: 'none',\n    margin: 0\n  }\n};\n\nfunction parseText(text) {\n  if (isNumber(text)) return text;\n\n  if (isString(text)) {\n    text = text.trim();\n    if (!text) return '';\n    var num = parseFloat(text);\n\n    if (!isNaN(num)) {\n      return num;\n    }\n  }\n\n  return '';\n}\n\nfunction changeValue(mod, value, max, min, step) {\n  if (value === '') {\n    if (isNumber(min)) return min;\n    return '';\n  }\n\n  value = mod === '+' ? value + step : value - step;\n  if (isNumber(max) && value > max) return max;\n  if (isNumber(min) && value < min) return min;\n  var p = (step.toString().split('.')[1] || []).length;\n\n  if (p) {\n    return parseFloat(value.toFixed(p));\n  }\n\n  return value;\n}\n\nexport default InputNumber;","map":{"version":3,"sources":["/Users/satishp/Projects/demo3d/node_modules/react-input-number/dist/index.esm.js"],"names":["_extends","_objectWithoutPropertiesLoose","jsx","isNaN","isNumber","isString","useState","useEffect","KEY_UP","KEY_DOWN","IS_IOS","navigator","userAgent","match","InputNumber","_ref","step","min","max","value","onChange","onKeyDown","enableMobileNumericKeyboard","component","props","_useState","text","setText","handleChange","parseText","handleWheel","e","target","blur","handleKeyDown","keyCode","up","down","changeValue","inputProps","onWheel","css","styles","type","inputMode","pattern","Input","_ref2","defaultProps","autoComplete","MozAppearance","WebkitAppearance","margin","trim","num","parseFloat","mod","p","toString","split","length","toFixed"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/objectWithoutPropertiesLoose';\nimport { jsx } from '@emotion/core';\nimport isNaN from 'lodash/isNaN';\nimport isNumber from 'lodash/isNumber';\nimport isString from 'lodash/isString';\nimport { useState, useEffect } from 'react';\n\nvar KEY_UP = 38;\nvar KEY_DOWN = 40;\nvar IS_IOS = typeof navigator !== 'undefined' ? navigator.userAgent.match(/iPhone|iPad|iPod/i) : false;\n\nvar InputNumber = function InputNumber(_ref) {\n  var step = _ref.step,\n      min = _ref.min,\n      max = _ref.max,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      onKeyDown = _ref.onKeyDown,\n      enableMobileNumericKeyboard = _ref.enableMobileNumericKeyboard,\n      component = _ref.component,\n      props = _objectWithoutPropertiesLoose(_ref, [\"step\", \"min\", \"max\", \"value\", \"onChange\", \"onKeyDown\", \"enableMobileNumericKeyboard\", \"component\"]);\n\n  var _useState = useState(value),\n      text = _useState[0],\n      setText = _useState[1];\n\n  useEffect(function () {\n    setText(value);\n  }, [value]);\n\n  function handleChange(text) {\n    var value = parseText(text);\n    setText(text);\n\n    if (onChange) {\n      onChange(value);\n    }\n  }\n\n  function handleWheel(e) {\n    e.target.blur();\n  }\n\n  function handleKeyDown(e) {\n    if (e.keyCode === KEY_UP) {\n      up();\n    } else if (e.keyCode === KEY_DOWN) {\n      down();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(e);\n    }\n  }\n\n  function up() {\n    if (onChange) {\n      onChange(changeValue('+', value, max, min, step));\n    }\n  }\n\n  function down() {\n    if (onChange) {\n      onChange(changeValue('-', value, max, min, step));\n    }\n  }\n\n  var inputProps = {\n    value: text,\n    onChange: handleChange,\n    onKeyDown: handleKeyDown,\n    onWheel: handleWheel\n  };\n\n  if (enableMobileNumericKeyboard) {\n    return jsx(component, _extends({}, props, inputProps, {\n      css: styles,\n      type: 'number',\n      inputMode: 'numeric',\n      pattern: IS_IOS ? \"[0-9]*\" : '',\n      step: step,\n      min: min,\n      max: max\n    }));\n  }\n\n  return jsx(component, _extends({}, props, inputProps, {\n    css: styles,\n    type: 'text'\n  }));\n};\n\nvar Input = function Input(_ref2) {\n  var onChange = _ref2.onChange,\n      props = _objectWithoutPropertiesLoose(_ref2, [\"onChange\"]);\n\n  function handleChange(e) {\n    if (onChange) {\n      onChange(e.target.value);\n    }\n  }\n\n  return jsx(\"input\", _extends({}, props, {\n    onChange: handleChange\n  }));\n};\n\nInputNumber.defaultProps = {\n  autoComplete: 'off',\n  enableMobileNumericKeyboard: false,\n  value: '',\n  component: Input,\n  step: 1\n};\nvar styles = {\n  MozAppearance: 'textfield',\n  '&::-webkit-inner-spin-button, &::-webkit-outer-spin-button': {\n    WebkitAppearance: 'none',\n    margin: 0\n  }\n};\nfunction parseText(text) {\n  if (isNumber(text)) return text;\n\n  if (isString(text)) {\n    text = text.trim();\n    if (!text) return '';\n    var num = parseFloat(text);\n\n    if (!isNaN(num)) {\n      return num;\n    }\n  }\n\n  return '';\n}\nfunction changeValue(mod, value, max, min, step) {\n  if (value === '') {\n    if (isNumber(min)) return min;\n    return '';\n  }\n\n  value = mod === '+' ? value + step : value - step;\n  if (isNumber(max) && value > max) return max;\n  if (isNumber(min) && value < min) return min;\n  var p = (step.toString().split('.')[1] || []).length;\n\n  if (p) {\n    return parseFloat(value.toFixed(p));\n  }\n\n  return value;\n}\n\nexport default InputNumber;\n"]},"metadata":{},"sourceType":"module"}